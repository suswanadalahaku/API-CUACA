const h={0:{name:"Clear Sky",icons:{day:"clear.svg",night:"clear-night.svg"}},1:{name:"Mainly Clear",icons:{day:"clear.svg",night:"clear-night.svg"}},2:{name:"Partly Cloudy",icons:{day:"partly-cloudy.svg",night:"partly-cloudy-night.svg"}},3:{name:"Overcast",icons:{day:"overcast.svg",night:"overcast.svg"}},45:{name:"Fog",icons:{day:"fog.svg",night:"fog-night.svg"}},48:{name:"Rime Fog",icons:{day:"rime-fog.svg",night:"rime-fog.svg"}},51:{name:"Light Drizzle",icons:{day:"light-drizzle.svg",night:"light-drizzle.svg"}},53:{name:"Moderate Drizzle",icons:{day:"drizzle.svg",night:"drizzle.svg"}},55:{name:"Heavy Drizzle",icons:{day:"heavy-drizzle.svg",night:"heavy-drizzle.svg"}},56:{name:"Light Freezing Drizzle",icons:{day:"drizzle.svg",night:"drizzle.svg"}},57:{name:"Dense Freezing Drizzle",icons:{day:"heavy-drizzle.svg",night:"heavy-drizzle.svg"}},61:{name:"Slight Rain",icons:{day:"slight-rain.svg",night:"slight-rain-night.svg"}},63:{name:"Moderate Rain",icons:{day:"rain.svg",night:"rain.svg"}},65:{name:"Heavy Rain",icons:{day:"heavy-rain.svg",night:"heavy-rain.svg"}},66:{name:"Light Freezing Rain",icons:{day:"rain.svg",night:"rain.svg"}},67:{name:"Heavy Freezing Rain",icons:{day:"heavy-rain.svg",night:"heavy-rain.svg"}},71:{name:"Slight snowfall",icons:{day:"light-snow.svg",night:"light-snow-night.svg"}},73:{name:"Moderate snowfall",icons:{day:"snow.svg",night:"snow.svg"}},75:{name:"Heavy snowfall",icons:{day:"heavy-snow.svg",night:"heavy-snow.svg"}},77:{name:"Snow Grains",icons:{day:"snow-grains.svg",night:"snow-grains.svg"}},80:{name:"Slight Rain Showers",icons:{day:"slight-rain-showers.svg",night:"slight-rain-showers-night.svg"}},81:{name:"Moderate Rain Showers",icons:{day:"rain-showers.svg",night:"rain-showers.svg"}},82:{name:"Violent Rain Showers",icons:{day:"heavy-rain-showers.svg",night:"heavy-rain-showers.svg"}},85:{name:"Light Snow Showers",icons:{day:"light-snow-showers.svg",night:"light-snow-showers.svg"}},86:{name:"Heavy Snow Showers",icons:{day:"heavy-snow-showers.svg",night:"heavy-snow-showers.svg"}},95:{name:"Thunderstorm",icons:{day:"thunderstorm.svg",night:"thunderstorm.svg"}},96:{name:"Slight Hailstorm",icons:{day:"hail.svg",night:"hail.svg"}},99:{name:"Heavy Hailstorm",icons:{day:"heavy-hail.svg",night:"heavy-hail.svg"}}},E=document.getElementById("search-box"),d=document.getElementById("weather-details"),M=document.getElementById("location"),S=document.getElementById("weather-condition-icon"),B=document.getElementById("weather-condition-name"),I=document.getElementById("temperature"),L=document.getElementById("humidity"),T=document.getElementById("wind-speed"),l=document.getElementById("location-input"),m=document.getElementById("daily-forecast"),g=document.getElementById("errTxt");async function H(a){const e=(await(await fetch(`https://geocoding-api.open-meteo.com/v1/search?name=${a}&count=1&language=en&format=json`)).json()).results[0];return{name:e.name||"",lat:e.latitude,lon:e.longitude}}async function D(a){const{lat:t,lon:s,name:e}=await H(a),i=await(await fetch(`https://api.open-meteo.com/v1/forecast?latitude=${t}&longitude=${s}&current=temperature_2m,relative_humidity_2m,is_day,weather_code,wind_speed_10m&daily=weather_code,temperature_2m_max,temperature_2m_min`)).json();return{name:e,current:i.current,daily:i.daily}}E.addEventListener("submit",async a=>{if(a.preventDefault(),d.classList.remove("active"),m.innerHTML="",l.value.trim()==="")g.textContent="Please Enter a Location To Get Weather Details";else{g.textContent="";try{const t=await D(l.value),{temperature_2m:s,relative_humidity_2m:e,is_day:c,weather_code:i,wind_speed_10m:v}=t.current,{weather_code:y,temperature_2m_max:w,temperature_2m_min:u,time:p}=t.daily,o=h[i],z=`assets/${c?o.icons.day:o.icons.night}`;M.textContent=t.name,I.textContent=s,L.textContent=e,T.textContent=v,B.textContent=o.name,S.src=z;for(let n=0;n<7;n++){const _=h[y[n]],x=w[n],C=u[n],f=p[n],r=document.createElement("div");r.className="card",r.innerHTML=`<img src="assets/${_.icons.day}" alt="weather-icon" width="100" height="100"/>
                   <div class="temps">
                        <p class="temp" title="Maximum Temperature">${x}<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M16.5 5c1.55 0 3 .47 4.19 1.28l-1.16 2.89A4.47 4.47 0 0 0 16.5 8C14 8 12 10 12 12.5s2 4.5 4.5 4.5c1.03 0 1.97-.34 2.73-.92l1.14 2.85A7.47 7.47 0 0 1 16.5 20A7.5 7.5 0 0 1 9 12.5A7.5 7.5 0 0 1 16.5 5M6 3a3 3 0 0 1 3 3a3 3 0 0 1-3 3a3 3 0 0 1-3-3a3 3 0 0 1 3-3m0 2a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1a1 1 0 0 0-1-1"/></svg></p>
                        <p class="temp" title="Minimum Temperature">${C}<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M16.5 5c1.55 0 3 .47 4.19 1.28l-1.16 2.89A4.47 4.47 0 0 0 16.5 8C14 8 12 10 12 12.5s2 4.5 4.5 4.5c1.03 0 1.97-.34 2.73-.92l1.14 2.85A7.47 7.47 0 0 1 16.5 20A7.5 7.5 0 0 1 9 12.5A7.5 7.5 0 0 1 16.5 5M6 3a3 3 0 0 1 3 3a3 3 0 0 1-3 3a3 3 0 0 1-3-3a3 3 0 0 1 3-3m0 2a1 1 0 0 0-1 1a1 1 0 0 0 1 1a1 1 0 0 0 1-1a1 1 0 0 0-1-1"/></svg></p>
                   </div>
                   <p class="date">${f}</p>`,m.appendChild(r)}d.classList.add("active")}catch{g.textContent="Location Not Found"}}});
